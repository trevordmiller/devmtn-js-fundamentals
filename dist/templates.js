this["Handlebars"] = this["Handlebars"] || {};
this["Handlebars"]["Templates"] = this["Handlebars"]["Templates"] || {};

this["Handlebars"]["Templates"]["index.hbs"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, self=this;


  stack1 = self.invokePartial(partials['page-top'], 'page-top', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n	<!-- PAGE LEVEL: HTML  -->\n	<!-- index -->\n	<!-- Built with revealjs -->\n	<!-- https://github.com/hakimel/reveal.js/ -->\n	<div class=\"reveal index\">\n		<div class=\"slides\">\n\n\n\n			<!-- ================================================ -->\n			<!-- INTRO -->\n			<!-- ================================================ -->\n\n			<!-- SLIDE: MAIN TITLE -->\n			<section class=\"slide slide--section-title slide--main-title\" data-background=\"#5dc4c6\">\n				<h1>JavaScript Fundamentals</h1>\n				<h2>Part 1</h2>\n			</section>\n\n			<!-- SLIDE: ABOUT -->\n			<section class=\"slide slide--section-title slide--about\" data-background=\"#5dc4c6\">\n				<h1>Hi there!</h1>\n				<h2>My name is Trevor.</h2>\n				";
  stack1 = self.invokePartial(partials['trevordmiller-follow'], 'trevordmiller-follow', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n			</section>\n\n			<!-- SLIDE: OVERVIEW -->\n			<section class=\"slide slide--section-title slide--overview\" data-background=\"#5dc4c6\">\n				<h1>Lesson Outline</h1>\n				<ul>\n					<li class=\"fragment roll-in\">How the web works.</li>\n					<li class=\"fragment roll-in\">How JS fits in with HTML &amp; CSS.</li>\n					<li class=\"fragment roll-in\">Client vs Server.</li>\n					<li class=\"fragment roll-in\">The Principles of TDD.</li>\n					<li class=\"fragment roll-in\">Fundamental concepts of JS.</li>\n					<li class=\"fragment roll-in\">Project: JS Koans.</li>\n				</ul>\n			</section>\n\n			<!-- SLIDE: WARNING -->\n			<section class=\"slide slide--warning\" data-background=\"#f96a5c\">\n				<h1>Warning!</h1>\n				<h2>Hands on.</h2>\n				I'll call on you\n				Practice problems in slides.\n				<a href=\"https://github.com/trevordmiller/devmtn-js-fundamentals-1\">https://github.com/trevordmiller/devmtn-js-fundamentals-1</a>\n				<h2>I'd like to invite you to follow along. Each section will include a question and a bit of practice that you can try for yourself.</h2>\n				<ul>\n					<li>Clone</li>\n					<li><code>dist/index.html</code></li>\n				</ul>\n			</section>\n\n\n\n			<!-- ================================================ -->\n			<!-- SECTION -->\n			<!-- ================================================ -->\n			<section class=\"slide slide--section-title\" data-background=\"#5dc4c6\" data-transition=\"zoom\">\n				<h1>How the web works.</h1>\n				<ul>\n					<li class=\"fragment roll-in\">Points</li>\n				</ul>\n			</section>\n\n				<!-- SLIDE -->\n				<section class=\"slide\">\n					<h2>Goal</h2>\n					<p>stuff</p>\n					";
  stack1 = self.invokePartial(partials['js-logo'], 'js-logo', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n				</section>\n\n\n\n			<!-- ================================================ -->\n			<!-- SECTION -->\n			<!-- ================================================ -->\n			<section class=\"slide slide--section-title\" data-background=\"#5dc4c6\" data-transition=\"zoom\">\n				<h1>How JS fits in with HTML &amp; CSS.</h1>\n				<ul>\n					<li class=\"fragment roll-in\">Points</li>\n				</ul>\n			</section>\n\n				<!-- SLIDE -->\n				<section class=\"slide\">\n					<h2>Slide Heading</h2>\n					<p>Stuff</p>\n				</section>\n\n\n\n			<!-- ================================================ -->\n			<!-- SECTION -->\n			<!-- ================================================ -->\n			<section class=\"slide slide--section-title\" data-background=\"#5dc4c6\" data-transition=\"zoom\">\n				<h1>Client vs Server.</h1>\n				<ul>\n					<li class=\"fragment roll-in\">Points</li>\n				</ul>\n			</section>\n\n				<!-- SLIDE -->\n				<section class=\"slide\">\n					<h2>Slide Heading</h2>\n					<p>Stuff</p>\n				</section>\n\n\n\n			<!-- ================================================ -->\n			<!-- END -->\n			<!-- ================================================ -->\n\n			<!-- SLIDE -->\n			<section class=\"slide slide--section-title slide--end\" data-background=\"#5dc4c6\">\n				<h1>Summary</h1>\n				<p>If you forget everything about this or you zoned out or whatever...the gist of it all is:</p>\n				<ol>\n					<li>Primer is pretty cool.</li>\n					<li>Read the documentation.</li>\n					<li>Setup everything in the \"Prerequisites\" section.</li>\n					<li>Run <code>yo primer</code> to create \"projects\".</li>\n					<li>Run <code>yo primer:component</code> to create \"components\".</li>\n				</ol>\n			</section>\n\n			<!-- SLIDE -->\n			<section class=\"slide slide--section-title slide--end\" data-background=\"#5dc4c6\">\n				<h1>Give it a try!</h1>\n				<p><a target=\"_blank\" href=\"https://code.ldschurch.org/stash/projects/PRIMER\">https://code.ldschurch.org/stash/projects/PRIMER</a></p>\n			</section>\n\n		</div>\n	</div>\n\n";
  stack1 = self.invokePartial(partials['page-bottom'], 'page-bottom', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n";
  return buffer;
  });